{
  "name": "wd-sync",
  "version": "1.0.0",
  "description": "sync version of wd using fibers.",
  "keywords": [
    "selenium",
    "webdriver",
    "test",
    "fibers",
    "sync"
  ],
  "author": {
    "name": "Seb Vincent",
    "email": "seb.vincent@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sebv/node-wd-sync.git"
  },
  "main": "./index",
  "engine": "node >= 0.6.1",
  "scripts": {
    "test": "cake test"
  },
  "dependencies": {
    "wd": "git://github.com/admc/wd.git",
    "make-sync": "0.1.x"
  },
  "devDependencies": {
    "coffee-script": "1.3.x",
    "sv-cake-utils": "0.1.x",
    "mocha": "1.6.x",
    "should": "1.2.x",
    "express": "3.0.x",
    "whiskers": "0.2.x",
    "async": "0.1.x",
    "underscore": "1.4.x"
  },
  "readme": "# wd-sync\n\nNOTE: API change in 1.0.0, see section below.\n\nA synchronous version with a nice api of [wd](http://github.com/admc/wd), \nthe lightweight  [WebDriver / Selenium2](http://seleniumhq.org/projects/webdriver/) \nclient for node.js, built using  [node-fibers](http://github.com/laverdet/node-fibers).\n\nRemote testing with [Sauce Labs](http://saucelabs.com) also works.\n\n## install\n\n```\nnpm install wd-sync\n```\n\n## upgrade to V1\n\nThe main changes are the folowing:\n\n### CoffeeScript\n\n- 1/ require: `wdSync = require 'wd-sync'`\n- 2/ `Wd` becomes `sync`\n- 3/ `WdWrap` becomes `wrap`\n- 4/ to retrieve browser + sync: `{browser, sync} = wdSync.remote()`\n- 5/ to create a `wrap`: `wrap = wdSync.wrap ...`  \n\n### JavaScript\n\n- 1/ require: `var wdSync = require('wd-sync');`\n- 2/ `Wd` becomes `sync`\n- 3/ `WdWrap` becomes `wrap`\n- 4/ to retrieve browser + sync: `var client = wdSync.remote(), browser=\nclient.browser, sync = client.sync;`\n- 5/ to create a `wrap`: `var wrap = wdSync.wrap(...`  \n\n## code samples\n\n### CoffeeScript\n\n```coffeescript\n# assumes that selenium server is running\n\nwdSync = require 'wd-sync'\n  \n# 1/ simple Wd example \n\n{browser, sync} = wdSync.remote()\n\nsync ->        \n  console.log \"server status:\", @status()\n  @init browserName:'firefox'\n  console.log \"session capabilities:\", @sessionCapabilities()\n\n  @get \"http://google.com\"\n  console.log @title()          \n\n  queryField = @elementByName 'q'\n  @type queryField, \"Hello World\"  \n  @type queryField, \"\\n\"\n\n  @setWaitTimeout 3000      \n  @elementByCss '#ires' # waiting for new page to load\n  console.log @title()\n\n  console.log @elementByNameIfExists 'not_exists' # undefined\n\n  @quit()  \n\n```        \n\n### JavaScript\n\n```javascript\n// assumes that selenium server is running\n\nvar wdSync = require('wd-sync');\n\n// 1/ simple Wd example \n\nvar client = wdSync.remote()\n    , browser = client.browser\n    , sync = client.sync;\n\nsync( function() {\n  \n  console.log(\"server status:\", browser.status());\n  browser.init( { browserName: 'firefox'} );\n  console.log(\"session capabilities:\", browser.sessionCapabilities());\n  \n  browser.get(\"http://google.com\");\n  console.log(browser.title());\n  \n  var queryField = browser.elementByName('q');\n  browser.type(queryField, \"Hello World\");\n  browser.type(queryField, \"\\n\");\n  \n  browser.setWaitTimeout(3000);\n  browser.elementByCss('#ires'); // waiting for new page to load\n  console.log(browser.title());\n  \n  console.log(browser.elementByNameIfExists('not_exists')); // undefined\n  \n  browser.quit();\n\n});\n\n``` \n\n## doc \n\n* [CoffeeScript](http://github.com/sebv/node-wd-sync/blob/master/doc/COFFEE-DOC.md)\n* [JavaScript](http://github.com/sebv/node-wd-sync/blob/master/doc/JS-DOC.md)\n\nDoc and README modifications must be done in the doc/template directory, then run 'cake doc:build'.\n\n## examples\n\n* [CoffeeScript](http://github.com/sebv/node-wd-sync/tree/master/examples/coffee)\n* [JavaScript](http://github.com/sebv/node-wd-sync/tree/master/examples/js)\n\n\n## supported methods\n\n<table class=\"wikitable\">\n  <tbody>\n    <tr>\n      <td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\n        <strong>JsonWireProtocol</strong>\n      </td>\n      <td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\n        <strong>wd</strong>\n      </td>\n    </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/status\">/status</a><br>\n            Query the server's current status.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              status() -&gt; status<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session\">/session</a><br>\n            Create a new session.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              init(desired) -&gt; sessionID<br>\n            \n              Initialize the browser.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/sessions\">/sessions</a><br>\n            Returns a list of the currently active sessions.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                sessions() -&gt; sessions<br>\n              \n            </p>\n          \n            <p>\n              \n                Alternate strategy to get session capabilities from server session list: <br>\n              \n                altSessionCapabilities() -&gt; capabilities<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId\">/session/:sessionId</a><br>\n            Retrieve the capabilities of the specified session.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              sessionCapabilities() -&gt; capabilities<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            DELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId\">/session/:sessionId</a><br>\n            Delete the session.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              quit()<br>\n            \n              Destroy the browser.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts\">/session/:sessionId/timeouts</a><br>\n            Configure the amount of time that a particular type of operation can execute for before they are aborted and a |Timeout| error is returned to the client.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              setPageLoadTimeout(ms)<br>\n            \n              (use setImplicitWaitTimeout and setAsyncScriptTimeout to set the other timeouts)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/async_script\">/session/:sessionId/timeouts/async_script</a><br>\n            Set the amount of time, in milliseconds, that asynchronous scripts executed by /session/:sessionId/execute_async are permitted to run before they are aborted and a |Timeout| error is returned to the client.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              setAsyncScriptTimeout(ms)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/implicit_wait\">/session/:sessionId/timeouts/implicit_wait</a><br>\n            Set the amount of time the driver should wait when searching for elements.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              setImplicitWaitTimeout(ms)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/window_handle\">/session/:sessionId/window_handle</a><br>\n            Retrieve the current window handle.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              windowHandle() -&gt; handle<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/window_handles\">/session/:sessionId/window_handles</a><br>\n            Retrieve the list of all window handles available to the session.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              windowHandles() -&gt; arrayOfHandles<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/url\">/session/:sessionId/url</a><br>\n            Retrieve the URL of the current page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              url() -&gt; url<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/url\">/session/:sessionId/url</a><br>\n            Navigate to a new URL.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              get(url)<br>\n            \n              Get a new url.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/forward\">/session/:sessionId/forward</a><br>\n            Navigate forwards in the browser history, if possible.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              forward()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/back\">/session/:sessionId/back</a><br>\n            Navigate backwards in the browser history, if possible.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              back()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/refresh\">/session/:sessionId/refresh</a><br>\n            Refresh the current page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              refresh()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute\">/session/:sessionId/execute</a><br>\n            Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                execute(code, args) -&gt; result<br>\n              \n                execute(code) -&gt; result<br>\n              \n                args: script argument array (optional)<br>\n              \n                 <br>\n              \n            </p>\n          \n            <p>\n              \n                Execute script using eval(code): <br>\n              \n                safeExecute(code, args) -&gt; result<br>\n              \n                safeExecute(code) -&gt; result<br>\n              \n                args: script argument array (optional)<br>\n              \n                 <br>\n              \n            </p>\n          \n            <p>\n              \n                Evaluate expression (using execute): <br>\n              \n                eval(code) -&gt; value<br>\n              \n            </p>\n          \n            <p>\n              \n                Evaluate expression (using safeExecute): <br>\n              \n                safeEval(code) -&gt; value<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute_async\">/session/:sessionId/execute_async</a><br>\n            Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                executeAsync(code, args) -&gt; result<br>\n              \n                executeAsync(code) -&gt; result<br>\n              \n                args: script argument array (optional)<br>\n              \n                 <br>\n              \n            </p>\n          \n            <p>\n              \n                Execute async script using eval(code): <br>\n              \n                safeExecuteAsync(code, args) -&gt; result<br>\n              \n                safeExecuteAsync(code) -&gt; result<br>\n              \n                args: script argument array (optional)<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/screenshot\">/session/:sessionId/screenshot</a><br>\n            Take a screenshot of the current page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              takeScreenshot() -&gt; screenshot<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/frame\">/session/:sessionId/frame</a><br>\n            Change focus to another frame on the page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              frame(frameRef)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/window\">/session/:sessionId/window</a><br>\n            Change focus to another window.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              window(name)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            DELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/window\">/session/:sessionId/window</a><br>\n            Close the current window.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              close()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n            Retrieve all cookies visible to the current page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              allCookies() -&gt; cookies<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n            Set a cookie.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              setCookie(cookie)<br>\n            \n              cookie example:  <br>\n            \n               {name:'fruit', value:'apple'}<br>\n            \n              Optional cookie fields: <br>\n            \n               path, domain, secure, expiry<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            DELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\n            Delete all cookies visible to the current page.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              deleteAllCookies()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            DELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie/:name\">/session/:sessionId/cookie/:name</a><br>\n            Delete the cookie with the given name.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              deleteCookie(name)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/title\">/session/:sessionId/title</a><br>\n            Get the current page title.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              title() -&gt; title<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element\">/session/:sessionId/element</a><br>\n            Search for an element on the page, starting from the document root.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                element(using, value) -&gt; element<br>\n              \n            </p>\n          \n            <p>\n              \n                elementByClassName(value) -&gt; element<br>\n              \n                elementByCssSelector(value) -&gt; element<br>\n              \n                elementById(value) -&gt; element<br>\n              \n                elementByName(value) -&gt; element<br>\n              \n                elementByLinkText(value) -&gt; element<br>\n              \n                elementByPartialLinkText(value) -&gt; element<br>\n              \n                elementByTagName(value) -&gt; element<br>\n              \n                elementByXPath(value) -&gt; element<br>\n              \n                elementByCss(value) -&gt; element<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/elements\">/session/:sessionId/elements</a><br>\n            Search for multiple elements on the page, starting from the document root.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                elements(using, value) -&gt; elements<br>\n              \n            </p>\n          \n            <p>\n              \n                elementsByClassName(value) -&gt; elements      <br>\n              \n                elementsByCssSelector(value) -&gt; elements      <br>\n              \n                elementsById(value) -&gt; elements      <br>\n              \n                elementsByName(value) -&gt; elements      <br>\n              \n                elementsByLinkText(value) -&gt; elements      <br>\n              \n                elementsByPartialLinkText(value) -&gt; elements      <br>\n              \n                elementsByTagName(value) -&gt; elements      <br>\n              \n                elementsByXPath(value) -&gt; elements      <br>\n              \n                elementsByCss(value) -&gt; elements      <br>\n              \n            </p>\n          \n            <p>\n              \n                Retrieve an element avoiding not found exception and returning null instead: <br>\n              \n                elementOrNull(using, value) -&gt; element<br>\n              \n            </p>\n          \n            <p>\n              \n                elementByClassNameOrNull(value) -&gt; element<br>\n              \n                elementByCssSelectorOrNull(value) -&gt; element<br>\n              \n                elementByIdOrNull(value) -&gt; element<br>\n              \n                elementByNameOrNull(value) -&gt; element<br>\n              \n                elementByLinkTextOrNull(value) -&gt; element<br>\n              \n                elementByPartialLinkTextOrNull(value) -&gt; element<br>\n              \n                elementByTagNameOrNull(value) -&gt; element<br>\n              \n                elementByXPathOrNull(value) -&gt; element<br>\n              \n                elementByCssOrNull(value) -&gt; element<br>\n              \n            </p>\n          \n            <p>\n              \n                Retrieve an element avoiding not found exception and returning undefined instead: <br>\n              \n                elementIfExists(using, value) -&gt; element<br>\n              \n            </p>\n          \n            <p>\n              \n                elementByClassNameIfExists(value) -&gt; element<br>\n              \n                elementByCssSelectorIfExists(value) -&gt; element<br>\n              \n                elementByIdIfExists(value) -&gt; element<br>\n              \n                elementByNameIfExists(value) -&gt; element<br>\n              \n                elementByLinkTextIfExists(value) -&gt; element<br>\n              \n                elementByPartialLinkTextIfExists(value) -&gt; element<br>\n              \n                elementByTagNameIfExists(value) -&gt; element<br>\n              \n                elementByXPathIfExists(value) -&gt; element<br>\n              \n                elementByCssIfExists(value) -&gt; element<br>\n              \n            </p>\n          \n            <p>\n              \n                Check if element exists: <br>\n              \n                hasElement(using, value) -&gt; boolean<br>\n              \n            </p>\n          \n            <p>\n              \n                hasElementByClassName(value) -&gt; boolean <br>\n              \n                hasElementByCssSelector(value) -&gt; boolean <br>\n              \n                hasElementById(value) -&gt; boolean <br>\n              \n                hasElementByName(value) -&gt; boolean <br>\n              \n                hasElementByLinkText(value) -&gt; boolean <br>\n              \n                hasElementByPartialLinkText(value) -&gt; boolean <br>\n              \n                hasElementByTagName(value) -&gt; boolean <br>\n              \n                hasElementByXPath(value) -&gt; boolean <br>\n              \n                hasElementByCss(value) -&gt; boolean <br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/active\">/session/:sessionId/element/active</a><br>\n            Get the element on the page that currently has focus.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              active() -&gt; element<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/click\">/session/:sessionId/element/:id/click</a><br>\n            Click on an element.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                clickElement(element)<br>\n              \n            </p>\n          \n            <p>\n              \n                element.click()<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/text\">/session/:sessionId/element/:id/text</a><br>\n            Returns the visible text for the element.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                text(element) -&gt; text<br>\n              \n                element: specific element, 'body', or undefined<br>\n              \n            </p>\n          \n            <p>\n              \n                element.text() -&gt; text<br>\n              \n            </p>\n          \n            <p>\n              \n                Check if text is present: <br>\n              \n                textPresent(searchText, element) -&gt; boolean<br>\n              \n                element: specific element, 'body', or undefined<br>\n              \n                 <br>\n              \n            </p>\n          \n            <p>\n              \n                element.textPresent(searchText) -&gt; boolean<br>\n              \n                 <br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/value\">/session/:sessionId/element/:id/value</a><br>\n            Send a sequence of key strokes to an element.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                type(element, keys)<br>\n              \n                Type keys (all keys are up at the end of command).<br>\n              \n                special key map: wd.SPECIAL_KEYS (see lib/special-keys.js)<br>\n              \n            </p>\n          \n            <p>\n              \n                element.type(keys)<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/keys\">/session/:sessionId/keys</a><br>\n            Send a sequence of key strokes to the active element.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              keys(keys)<br>\n            \n              Press keys (keys may still be down at the end of command).<br>\n            \n              special key map: wd.SPECIAL_KEYS (see lib/special-keys.js)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/name\">/session/:sessionId/element/:id/name</a><br>\n            Query for an element's tag name.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                getTagName(element) -&gt; name<br>\n              \n            </p>\n          \n            <p>\n              \n                element.getTagName() -&gt; name<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/clear\">/session/:sessionId/element/:id/clear</a><br>\n            Clear a TEXTAREA or text INPUT element's value.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                clear(element)<br>\n              \n            </p>\n          \n            <p>\n              \n                element.clear()<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/attribute/:name\">/session/:sessionId/element/:id/attribute/:name</a><br>\n            Get the value of an element's attribute.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                getAttribute(element, attrName) -&gt; value<br>\n              \n            </p>\n          \n            <p>\n              \n                element.getAttribute(attrName) -&gt; value<br>\n              \n            </p>\n          \n            <p>\n              \n                Get element value (in value attribute): <br>\n              \n                getValue(element) -&gt; value<br>\n              \n            </p>\n          \n            <p>\n              \n                element.getValue() -&gt; value<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/displayed\">/session/:sessionId/element/:id/displayed</a><br>\n            Determine if an element is currently displayed.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                isDisplayed(element) -&gt; displayed<br>\n              \n            </p>\n          \n            <p>\n              \n                element.isDisplayed() -&gt; displayed<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            GET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/css/:propertyName\">/session/:sessionId/element/:id/css/:propertyName</a><br>\n            Query the value of an element's computed CSS property.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n          \n            <p>\n              \n                getComputedCss(element, cssProperty ) -&gt; value<br>\n              \n            </p>\n          \n            <p>\n              \n                element.getComputedCss(cssProperty ) -&gt; value<br>\n              \n            </p>\n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/accept_alert\">/session/:sessionId/accept_alert</a><br>\n            Accepts the currently displayed alert dialog.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              acceptAlert()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/dismiss_alert\">/session/:sessionId/dismiss_alert</a><br>\n            Dismisses the currently displayed alert dialog.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              dismissAlert()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/moveto\">/session/:sessionId/moveto</a><br>\n            Move the mouse by an offset of the specificed element.\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              moveTo(element, xoffset, yoffset)<br>\n            \n              Move to element, xoffset and y offset are optional.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/click\">/session/:sessionId/click</a><br>\n            Click any mouse button (at the coordinates set by the last moveto command).\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              click(button)<br>\n            \n              Click on current element.<br>\n            \n              Buttons: {left: 0, middle: 1 , right: 2}<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttondown\">/session/:sessionId/buttondown</a><br>\n            Click and hold the left mouse button (at the coordinates set by the last moveto command).\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              buttonDown()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttonup\">/session/:sessionId/buttonup</a><br>\n            Releases the mouse button previously held (where the mouse is currently at).\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              buttonUp()<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n            POST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/doubleclick\">/session/:sessionId/doubleclick</a><br>\n            Double-clicks at the current mouse coordinates (set by moveto).\n          \n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              doubleclick() <br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              Opens a new window (using Javascript window.open):<br>\n            \n              newWindow(url, name)<br>\n            \n              newWindow(url)<br>\n            \n              name: optional window name<br>\n            \n              Window can later be accessed by name with the window method, <br>\n            \n              or by getting the last handle returned by the windowHandles method.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              windowName() -&gt; name<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              waitForElement(using, value, timeout)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              waitForVisible(using, value, timeout)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              waitForElementByClassName(value, timeout)<br>\n            \n              waitForElementByCssSelector(value, timeout)<br>\n            \n              waitForElementById(value, timeout)<br>\n            \n              waitForElementByName(value, timeout)<br>\n            \n              waitForElementByLinkText(value, timeout)<br>\n            \n              waitForElementByPartialLinkText(value, timeout)<br>\n            \n              waitForElementByTagName(value, timeout)<br>\n            \n              waitForElementByXPath(value, timeout)<br>\n            \n              waitForElementByCss(value, timeout)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              waitForVisibleByClassName(value, timeout)<br>\n            \n              waitForVisibleByCssSelector(value, timeout)<br>\n            \n              waitForVisibleById(value, timeout)<br>\n            \n              waitForVisibleByName(value, timeout)<br>\n            \n              waitForVisibleByLinkText(value, timeout)<br>\n            \n              waitForVisibleByPartialLinkText(value, timeout)<br>\n            \n              waitForVisibleByTagName(value, timeout)<br>\n            \n              waitForVisibleByXPath(value, timeout)<br>\n            \n              waitForVisibleByCss(value, timeout)<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              isVisible(element ) -&gt; boolean<br>\n            \n              deprecated: isVisible(queryType, querySelector) -&gt; boolean<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              Waits for JavaScript condition to be true (polling within wd client): <br>\n            \n              waitForCondition(conditionExpr, timeout, pollFreq) -&gt; boolean<br>\n            \n              waitForCondition(conditionExpr, timeout) -&gt; boolean<br>\n            \n              waitForCondition(conditionExpr) -&gt; boolean<br>\n            \n              conditionExpr: condition expression, should return a boolean<br>\n            \n              timeout: timeout (optional, default: 1000) <br>\n            \n              pollFreq: pooling frequency (optional, default: 100)<br>\n            \n              return true if condition satisfied, error otherwise.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              Waits for JavaScript condition to be true (async script polling within browser): <br>\n            \n              waitForConditionInBrowser(conditionExpr, timeout, pollFreq) -&gt; boolean<br>\n            \n              waitForConditionInBrowser(conditionExpr, timeout) -&gt; boolean<br>\n            \n              waitForConditionInBrowser(conditionExpr) -&gt; boolean<br>\n            \n              conditionExpr: condition expression, should return a boolean<br>\n            \n              timeout: timeout (optional, default: 1000) <br>\n            \n              pollFreq: pooling frequency (optional, default: 100)<br>\n            \n              return true if condition satisfied, error otherwise.<br>\n            \n          \n          \n        </td>\n      </tr>\n    \n      <tr>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            EXTRA\n          \n          \n        </td>\n        <td style=\"border: 1px solid #ccc; padding: 5px;\">\n          \n          \n            \n              isVisible() -&gt; boolean<br>\n            \n          \n          \n        </td>\n      </tr>\n      \n  </tbody>\n</table>\n\n* [supported JsonWireProtocol mapping](http://github.com/sebv/node-wd-sync/blob/master/doc/jsonwire-mapping.md)\n* [full JsonWireProtocol mapping](http://github.com/sebv/node-wd-sync/blob/master/doc/jsonwire-full-mapping.md)\n  \n## available environments\n\n### WebDriver \n\nlocal [WebDriver / Selenium2](http://seleniumhq.org/projects/webdriver/) server\n\n### Sauce Labs\n\nRemote testing with [Sauce Labs](http://saucelabs.com).\n\n### Headless\n\nHeadless testing using [Zombie](http://github.com/assaf/zombie).\n\nnotes regarding headless/zombie:\n- only worth using for simple pages, not relying heavily on Javacripts.   \n- the headless functionality wont be maintained/improved, at least until Zombie 2 is stable. \n\n## tests\n\n### local / selenium server: \n\n1/ starts the selenium server with chromedriver:\n```  \njava -jar selenium-server-standalone-2.25.0.jar -Dwebdriver.chrome.driver=<PATH>/chromedriver\n```\n\n2a/ run tests\n```\ncake test:local \n```\n\n2b/ run clean test (making sure wd-zombie is not installed first)\n```\ncake test\n```\n\n### remote / Sauce Labs \n\n1/ follow the instructions [here](http://github.com/sebv/node-wd-sync/blob/master/test/sauce/README.md) to\nconfigure your username and access key.\n \n\n2/ run tests\n```\ncake test:sauce\n```\n\n### headless \n\nonce:\n```\ncake test:prepare:headless\n```\n\nthen:\n```\ncake test:headless\n```\n\n\n",
  "readmeFilename": "README.md",
  "_id": "wd-sync@1.0.0",
  "_from": "wd-sync"
}
